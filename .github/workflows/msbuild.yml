# The name of our workflow
name: Build
on: [push, pull_request]

jobs:
  msvc:
    strategy:
      matrix:
        arch: [x86, amd64, amd64_arm64]
        ossl: [openssl, openssl3]
        include:
        - arch: amd64_arm64
          triplet: arm64
        - arch: x86
          triplet: x86
        - arch: amd64
          triplet: x64

    env:
      # Indicates the location of the vcpkg as a Git submodule of the project repository.
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      SOLUTION_FILE_PATH: .
      BUILD_CONFIGURATION: Release
      VCPKG_OVERLAY_PORTS: '${{ github.workspace }}/openvpn/contrib/vcpkg-ports'
      buildDir: '${{ github.workspace }}/build/'

    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: lukka/get-cmake@latest
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch }}

    - name: Clone openvpn repo
      uses: actions/checkout@v2
      with:
        repository: openvpn/openvpn
        path: openvpn

    - name: Install dependencies
      uses: lukka/run-vcpkg@v7.4
      with:
        vcpkgGitCommitId: 'b18b17865cfb6bd24620a00f30691be6775abb96'
        vcpkgArguments: ${{ matrix.ossl }}
        vcpkgTriplet: '${{ matrix.triplet }}-windows'

    - name: Build
      uses: lukka/run-cmake@v3
      with:
        useVcpkgToolchainFile: true
        buildWithCMake: true
        cmakeBuildType: ${{env.BUILD_CONFIGURATION}}
        buildDirectory: ${{ env.buildDir }}

    - uses: actions/upload-artifact@v2
      with:
        name: openvpn-gui_${{ matrix.triplet }}_${{ matrix.ossl }}
        path: |
          ${{ env.buildDir }}/*.exe
          ${{ env.buildDir }}/*.dll
